{"ast":null,"code":"var _jsxFileName = \"/Users/Polo/Documents/assignment3/wordle-anche/src/BoardContainer.js\",\n  _s = $RefreshSig$();\nimport BoardRow from './BoardRow';\nimport { useState, useEffect, useRef } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardContainer({\n  board,\n  isActiveBoard,\n  setGrid,\n  input,\n  inputRow,\n  dividerRef,\n  isGameOver,\n  setIsGameOver\n}) {\n  _s();\n  const boardContainer = useRef(null);\n  const intervalRef = useRef();\n  const gridFall = () => {\n    const gridBodyPos = boardContainer.current.getBoundingClientRect();\n    const currentPos = gridBodyPos.top;\n    boardContainer.current.style.top = currentPos - board.gridFall + \"px\"; // moving grid down 5px\n    checkCollision();\n  };\n  const checkCollision = () => {\n    const gridBodyPos = boardContainer.current.getBoundingClientRect();\n    const dividerPos = dividerRef.current.getBoundingClientRect();\n    if (gridBodyPos.bottom >= dividerPos.top) {\n      clearInterval(intervalRef.current);\n      setIsGameOver(true);\n    }\n  };\n  const range = num => {\n    return [...Array(num).keys()];\n  };\n  useEffect(() => {\n    clearInterval(intervalRef.current);\n  }, [isGameOver]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      gridFall();\n    }, 3500);\n    intervalRef.current = intervalId;\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    // Grid update\n    if (isActiveBoard) {\n      const tempRow = range(board.cols).map(idx => {\n        if (input[idx]) {\n          return input[idx];\n        } else {\n          return {\n            letter: \"\",\n            color: \"#FFFFFF\"\n          };\n        }\n      });\n      const newGrid = [...board.grid];\n      newGrid[inputRow] = tempRow;\n      setGrid(newGrid, board.id);\n    }\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: boardContainer,\n    id: \"boardrow-container\",\n    children: range(board.rows).map(index => {\n      return /*#__PURE__*/_jsxDEV(BoardRow, {\n        input: board.grid[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(BoardContainer, \"syECo2+iJdE2xeSIJs6YAAQH25U=\");\n_c = BoardContainer;\nexport default BoardContainer;\nvar _c;\n$RefreshReg$(_c, \"BoardContainer\");","map":{"version":3,"names":["BoardRow","useState","useEffect","useRef","toast","Toaster","jsxDEV","_jsxDEV","BoardContainer","board","isActiveBoard","setGrid","input","inputRow","dividerRef","isGameOver","setIsGameOver","_s","boardContainer","intervalRef","gridFall","gridBodyPos","current","getBoundingClientRect","currentPos","top","style","checkCollision","dividerPos","bottom","clearInterval","range","num","Array","keys","intervalId","setInterval","tempRow","cols","map","idx","letter","color","newGrid","grid","id","ref","children","rows","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Polo/Documents/assignment3/wordle-anche/src/BoardContainer.js"],"sourcesContent":["import BoardRow from './BoardRow';\nimport { useState, useEffect, useRef } from 'react';\nimport toast, {Toaster} from 'react-hot-toast';\n\nfunction BoardContainer({board, isActiveBoard, setGrid, input, inputRow, dividerRef, isGameOver, setIsGameOver}) {\n  const boardContainer = useRef(null);\n  const intervalRef = useRef();\n\n  const gridFall = () => {\n    const gridBodyPos = boardContainer.current.getBoundingClientRect();\n    const currentPos = gridBodyPos.top;\n    boardContainer.current.style.top = (currentPos - board.gridFall) + \"px\"; // moving grid down 5px\n    checkCollision();\n  }\n\n  const checkCollision = () => {\n    const gridBodyPos = boardContainer.current.getBoundingClientRect();\n    const dividerPos = dividerRef.current.getBoundingClientRect();\n    if(gridBodyPos.bottom >= dividerPos.top) {\n      clearInterval(intervalRef.current);\n      setIsGameOver(true);\n    }\n  }\n\n  const range = (num) => {\n    return [...Array(num).keys()];\n  }\n\n  useEffect(() => {\n    clearInterval(intervalRef.current);\n  }, [isGameOver])\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      gridFall();\n    }, 3500);\n    intervalRef.current = intervalId;\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n      // Grid update\n    if(isActiveBoard) {\n      const tempRow = range(board.cols).map((idx) => {\n        if(input[idx]) {\n          return input[idx]\n        } else {\n          return { letter: \"\", color: \"#FFFFFF\"}\n        }\n      })\n      const newGrid = [...board.grid];\n      newGrid[inputRow] = tempRow;\n      setGrid(newGrid, board.id);\n    }\n  }, [input])\n\n  return (\n      <div ref={boardContainer} id=\"boardrow-container\">\n        {range(board.rows).map((index) => {\n          return <BoardRow input={board.grid[index]}/>\n        })\n      }\n      </div>\n  )\n}\n\nexport default BoardContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}